# === app/scheduler.py ===
from apscheduler.schedulers.background import BackgroundScheduler
import pytz
from datetime import datetime
from .rss_reader import fetch_articles
from .rewriter import rewrite_text
from .publisher import send_to_telegram
from .models import Article
from . import db
import os
import uuid
from .image_editor import process_image_from_prompt

def start_scheduler(app):
    scheduler = BackgroundScheduler(timezone=pytz.timezone('Europe/Kiev'))

    @scheduler.scheduled_job('interval', minutes=3)
    def job():
        with app.app_context():
            print("üîÑ –ó–∞–ø—É—Å–∫ —à–µ–¥—É–ª–µ—Ä–∞: –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ RSS...")
            fetch_articles()

            now = datetime.now(pytz.timezone('Europe/Kiev'))
            print(f"[LOG] –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {now}")
            articles = Article.query.filter(
                Article.is_posted == False,
                Article.publish_at != None,
                Article.publish_at <= now
            ).all()
            print(f"[LOG] –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {len(articles)}")
            for article in articles:
                try:
                    # –®–∞–≥ 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç—å–∏
                    print(f"[LOG] –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Å—Ç–∞—Ç—å–∏ ID {article.id}")
                    rewritten = rewrite_text(article.original_text)
                    article.rewritten_text = rewritten
                    print(f"[LOG] –¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Å—Ç–∞—Ç—å–∏ ID {article.id}")
                    
                    # –®–∞–≥ 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞
                    print(f"[LOG] –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç—å–∏ ID {article.id}")
                    filename = f"img_{uuid.uuid4().hex}.jpg"
                    image_path = os.path.join("static", "images", filename)
                    image_path = process_image_from_prompt(rewritten, image_path)
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –≤ —Å—Ç–∞—Ç—å–µ
                    article.image_path = image_path
                    print(f"[LOG] –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {image_path}")
                    
                    # –®–∞–≥ 3: –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
                    send_to_telegram(rewritten, image_path)
                    print(f"[LOG] –°—Ç–∞—Ç—å—è ID {article.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram")
                    article.is_posted = True
                    db.session.commit()
                    print(f"‚úÖ –û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ —Å—Ç–∞—Ç—Ç—é ID {article.id}")
                except Exception as e:
                    print(f"[!] –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ —Å—Ç–∞—Ç—Ç—ñ ID {article.id}: {e}")

    scheduler.start()
